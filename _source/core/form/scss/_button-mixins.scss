/////////////////////////////////////////////////
//  Button mixins
/////////////////////////////////////////////////

//  Common button mixins
/////////////////////////////////////////////////

// Add common button styles
@mixin add_button_styles() {
  display: inline-block;
  margin: 0;
  border: 0;
  background-image: none;
  text-align: center;
  font-weight: $button_font-weight;
  vertical-align: middle;
  white-space: nowrap;
  cursor: pointer;
  text-decoration: none;
  user-select: none;

  &:focus {
    outline: 0;
  }

  &.disabled,
  &[disabled],
  fieldset[disabled] & {
    cursor: not-allowed;
  }
}

//  Flat button mixin
/////////////////////////////////////////////////
@mixin create_button-flat($background, $color, $border) {
  @include add_button_styles(); // add common styles
  @include add_input_size($inputs_height, $inputs_padding-horizontal, $button_font-size, $button_border-radius, $button_flat_border-width*2); // add default size
  
  @if $border == true {

    @if lightness(get-color(background)) < 15% {
      $border: lighten($background, 15%);
    } @else {
      $border: darken($background, 10%);
    }
  } @else if $border == false {
    $border: transparent;
  }

  // invert color if not enough lightness difference
  $color: inverted($color, $background);

  background-color: $background;
  color: $color;
  border: $button_flat_border-width solid $border;

  &:hover,
  &:focus {
    background-color: hover($background);
    color: $color;
  }

  &:active,
  &.active {
    background-color: darken($background, 10%);
  }

  &.disabled,
  &[disabled] {
    &,
    &:hover,
    &:active,
    &:focus {
      background-color: $background;
      @include opacity(65);
    }
  }
}

//  Outline button mixin
/////////////////////////////////////////////////
@mixin create_button-outline($border, $color, $border-width: 1px) {
  @include add_button_styles(); // add common styles
  @include add_input_size($inputs_height, $inputs_padding-horizontal, $button_font-size, $button_border-radius, $border-width*2); // add default size

  background: transparent;
  color: $color;
  border: $border-width solid $border;

  &:hover,
  &:focus {
    color: inverted($inputs_color_button-text, $border);
    background: $border;
  }

  &:active,
  &.active {
    color: inverted($inputs_color_button-text, $border);
    background: darken($border, 10%);
  }

  &.disabled,
  &[disabled] {
    &,
    &:hover,
    &:active,
    &:focus {
      @include opacity(65);
    }
  }
}

//  3D button mixin
/////////////////////////////////////////////////
@mixin create_button-3d($background, $color) {
  @include add_button_styles(); // add common styles
  @include add_input_size($inputs_height - 3, $inputs_padding-horizontal, $button_font-size, $button_border-radius, 0); // add default size

  position: relative;
  top: -2px;
  
  @if lightness($background) < 10% {
    $background: lighten($background, 15%);
  } @else if lightness($background) > 98% {
    border-top: 1px solid darken($background, 10%);
  }

  // invert color if not enough lightness difference
  $color: inverted($color, $background);
  
  // create border
  $border: darken($background, 10%);

  background-color: $background;
  color: $color;
  box-shadow: 0px 3px 0px $border, 0px 3px 5px rgba(0, 0, 0, 0.4);

  &:hover,
  &:focus {
    background-color: hover($background);
    color: $color;
  }

  &:active,
  &.active {

    top: 0;
    box-shadow: 0px 1px 0px $border, 0px 1px 2px rgba(0, 0, 0, 0.4);
  }

  &.disabled,
  &[disabled] {
    &,
    &:hover,
    &:active,
    &:focus {
      top: -2px;
      background-color: $background;
      box-shadow: 0px 3px 0px $border, 0px 3px 5px rgba(0, 0, 0, 0.4);
      @include opacity(65);
    }
  }
}

//  Gradient button mixin
/////////////////////////////////////////////////
@mixin create_button-gradient($gradient-top, $gradient-bottom, $color, $border-top, $border-bottom) {
  @include add_button_styles(); // add common styles
  @include add_input_size($inputs_height, $inputs_padding-horizontal, $button_font-size, $button_border-radius, $button_gradient_border-width*2); // add default size

  // invert color if not enough lightness difference
  $color: inverted($color, darken($gradient-top, 10%));
  
  background-color: darken($gradient-top, 10%);
  background-image: linear-gradient($gradient-top, $gradient-bottom);
  color: $color;
  border-style: solid;
  border-width: $button_gradient_border-width 0;
  border-color: $border-top transparent $border-bottom;

  &:hover,
  &:focus {
    color: $color;
    background-color: $gradient-bottom;
    background-image: linear-gradient($gradient-top, $gradient-top);
  }

  &:active,
  &.active {
    background-color: $gradient-bottom;
    background-image: linear-gradient($gradient-bottom, $gradient-top);
  }

  &.disabled,
  &[disabled] {
    &,
    &:hover,
    &:active,
    &:focus {
      color: $color;

      background-color: $gradient-bottom;
      background-image: linear-gradient($gradient-top, $gradient-bottom);
      @include opacity(65);
    }
  }
}
